#!/bin/bash
# devops-cli - Main CLI entry point
# Part of the acme-devops-cli standalone tool

set -euo pipefail

SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
export PYTHONPATH="${SCRIPT_DIR}:${PYTHONPATH:-}"

# Colors for output - only use colors if terminal supports them
if [[ -t 1 ]] && [[ "${TERM:-}" != "dumb" ]] && command -v tput >/dev/null 2>&1 && tput colors >/dev/null 2>&1 && [[ $(tput colors) -ge 8 ]]; then
    RED='\033[0;31m'
    GREEN='\033[0;32m'
    YELLOW='\033[1;33m'
    BLUE='\033[0;34m'
    NC='\033[0m' # No Color
else
    RED=''
    GREEN=''
    YELLOW=''
    BLUE=''
    NC=''
fi

show_usage() {
    echo -e "${BLUE}DevOps CLI Tool${NC}"
    echo "A comprehensive CLI tool for DevOps operations"
    echo ""
    echo -e "${YELLOW}USAGE:${NC}"
    echo "    devops-cli <command> [options]"
    echo ""
    echo -e "${YELLOW}COMMANDS:${NC}"
    echo "    status      Get deployment status information"
    echo "    releases    List recent releases"
    echo "    health      Check environment health status"
    echo "    promote     Promote a release between environments"
    echo ""
    echo -e "${YELLOW}GLOBAL OPTIONS:${NC}"
    echo "    --help, -h     Show help information"
    echo "    --version, -v  Show version information"
    echo "    --format       Output format (json, table) - default: json"
    echo "    --verbose      Enable verbose output"
    echo ""
    echo -e "${YELLOW}EXAMPLES:${NC}"
    echo "    devops-cli status --app web-app --env prod"
    echo "    devops-cli releases --limit 10"
    echo "    devops-cli health --env staging"
    echo "    devops-cli promote --release v1.2.3 --from staging --to prod"
    echo ""
    echo -e "${YELLOW}For command-specific help:${NC}"
    echo "    devops-cli <command> --help"
    echo ""
}

show_version() {
    echo "devops-cli version 1.0.0"
}

# Check if Python 3 is available
check_python() {
    if ! command -v python3 &> /dev/null; then
        echo -e "${RED}Error: Python 3 is required but not found${NC}" >&2
        exit 1
    fi
}

# Main command routing
main() {
    # Handle global options first
    case "${1:-}" in
        --help|-h)
            show_usage
            exit 0
            ;;
        --version|-v)
            show_version
            exit 0
            ;;
        "")
            show_usage
            exit 1
            ;;
    esac

    check_python

    # Route to appropriate command module
    case "$1" in
        "status")
            python3 -m lib.commands.deployment_status "${@:2}"
            ;;
        "releases") 
            python3 -m lib.commands.recent_releases "${@:2}"
            ;;
        "health")
            python3 -m lib.commands.environment_health "${@:2}"
            ;;
        "promote")
            python3 -m lib.commands.promote_release "${@:2}"
            ;;
        *)
            echo -e "${RED}Error: Unknown command '$1'${NC}" >&2
            echo ""
            show_usage
            exit 1
            ;;
    esac
}

# Run main function with all arguments
main "$@"
